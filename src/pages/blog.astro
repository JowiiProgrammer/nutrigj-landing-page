---
import Layout from '../layouts/OtherLayout.astro';
import { getCollection } from 'astro:content';
import SectionTitle from '../components/ui/SectionTitle.astro';

// Obtener los posts desde la colección
const posts = await getCollection('posts');

// Función para generar categorías únicas
const uniqueTags = [...new Set(posts.flatMap((post) => post.data.tags || []))];
---

<Layout
  title='Blog - NutriGJ'
  description='Artículos y consejos de nutrición deportiva para maximizar tu rendimiento.'
>
  <section class='container mx-auto px-4 py-20 mt-6'>
    <SectionTitle class='text-center mb-12'>
      Blog
      <SectionTitle />

      <!-- Buscador -->
      <div
        class='flex flex-col md:flex-row gap-4 items-center justify-between mb-8'
      >
        <input
          type='text'
          id='search-input'
          placeholder='Buscar publicaciones...'
          class='w-full md:w-1/2 p-4 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-nutrigj-secondary focus:outline-none'
        />
        <select
          id='category-filter'
          class='w-full md:w-1/3 p-4 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-nutrigj-secondary focus:outline-none'
        >
          <option value='all'>Todas las categorías</option>
          {uniqueTags.map((tag) => <option value={tag}>{tag}</option>)}
        </select>
      </div>

      <!-- Lista de publicaciones -->
      {
        posts.length > 0 ? (
          <div id='post-list' class='grid md:grid-cols-2 lg:grid-cols-3 gap-8'>
            {posts.map((post) => {
              const { slug, data } = post;
              const { title, description, img, date, tags , link } = data;

              return (
                <article
                  class='post-item bg-white rounded-lg shadow-md overflow-hidden transition-transform hover:scale-105'
                  data-title={title.toLowerCase()}
                  data-tags={tags.join(',').toLowerCase()}
                >
                  <a href={`/blog/${slug}`} class='block'>
                    <img
                      transition:name={`img-${slug}`}
                      src={img}
                      alt={title}
                      class='w-full h-48 object-cover rounded-t-lg'
                    />
                  </a>
                  <div class='p-6'>
                    <time
                      datetime={new Date(date).toISOString()}
                      class='block text-sm text-gray-500 mb-2'
                    >
                      {new Date(date).toLocaleDateString('es-ES', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                      })}
                    </time>
                    <h2 class='text-lg font-bold text-nutrigj-black mb-2'>
                      {title}
                    </h2>
                    <p class='text-gray-600 mb-4'>{description}</p>
                    <div class='flex flex-wrap gap-2'>
                      {tags.map((tag) => (
                        <span class='bg-nutrigj-secondary/20 text-nutrigj-secondary text-xs font-semibold px-2 py-1 rounded-full'>
                          {tag}
                        </span>
                      ))}
                    </div>
                    <a
                      href={`/blog/${slug}`}
                      class='inline-flex items-center mt-4 text-nutrigj-primary font-semibold transition-transform hover:scale-105'
                    >
                      Leer más
                      <svg
                        xmlns='http://www.w3.org/2000/svg'
                        class='h-5 w-5 ml-2'
                        viewBox='0 0 20 20'
                        fill='currentColor'
                      >
                        <path
                          fill-rule='evenodd'
                          d='M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z'
                          clip-rule='evenodd'
                        />
                      </svg>
                    </a>
                  </div>
                </article>
              );
            })}
          </div>
        ) : (
          <div class='text-center text-gray-600'>
            <p>
              No hay artículos disponibles por ahora. ¡Pronto publicaremos más
              contenido!
            </p>
          </div>
        )
      }
    </SectionTitle>

    <!-- Script para Filtrar Publicaciones -->
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const searchInput = document.getElementById(
          'search-input'
        ) as HTMLInputElement;
        const categoryFilter = document.getElementById(
          'category-filter'
        ) as HTMLSelectElement;
        const postList = document.getElementById('post-list') as HTMLElement;
        const posts = Array.from(
          postList.getElementsByClassName('post-item')
        ) as HTMLElement[];

        function filterPosts() {
          const query = searchInput.value.toLowerCase();
          const selectedCategory = categoryFilter.value.toLowerCase();

          posts.forEach((post) => {
            const title = post.dataset.title?.toLowerCase() || '';
            const tags = post.dataset.tags?.toLowerCase() || '';

            const matchesQuery = title.includes(query);
            const matchesCategory =
              selectedCategory === 'all' || tags.includes(selectedCategory);

            if (matchesQuery && matchesCategory) {
              post.style.display = 'block'; // Mostrar el post
            } else {
              post.style.display = 'none'; // Ocultar el post
            }
          });
        }

        searchInput.addEventListener('input', filterPosts);
        categoryFilter.addEventListener('change', filterPosts);
      });
    </script>
  </section>
</Layout>
